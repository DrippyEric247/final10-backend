name: ü§ñ AI Bug Fixer

on:
  issues:
    types: [opened, labeled]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to fix'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: read

jobs:
  ai-bug-fixer:
    if: |
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'triage:ai')) ||
      github.event_name == 'workflow_dispatch'
    
    runs-on: ubuntu-latest
    
    steps:
      - name: üìã Get Issue Number
        id: issue
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "number=${{ github.event.inputs.issue_number }}" >> $GITHUB_OUTPUT
          else
            echo "number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi
      
      - name: üîç Check Issue Status
        id: check-issue
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = ${{ steps.issue.outputs.number }};
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            
            // Check if issue is closed
            if (issue.state === 'closed') {
              console.log('Issue is already closed, skipping...');
              core.setOutput('should_run', 'false');
              return;
            }
            
            // Check if issue has AI triage label
            const hasAiTriage = issue.labels.some(label => label.name === 'triage:ai');
            if (!hasAiTriage) {
              console.log('Issue does not have triage:ai label, skipping...');
              core.setOutput('should_run', 'false');
              return;
            }
            
            // Check if there's already an AI-generated PR for this issue
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            const hasAiPr = pulls.some(pr => 
              pr.title.includes('AI Fix') && 
              pr.body.includes(`#${issueNumber}`)
            );
            
            if (hasAiPr) {
              console.log('AI-generated PR already exists for this issue, skipping...');
              core.setOutput('should_run', 'false');
              return;
            }
            
            console.log('Issue is ready for AI processing');
            core.setOutput('should_run', 'true');
      
      - name: üöÄ Setup Node.js
        if: steps.check-issue.outputs.should_run == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: üì¶ Install Dependencies
        if: steps.check-issue.outputs.should_run == 'true'
        working-directory: server
        run: npm ci
      
      - name: üîç Checkout Repository
        if: steps.check-issue.outputs.should_run == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ü§ñ Configure Git
        if: steps.check-issue.outputs.should_run == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: üß† Run AI Bug Fixer
        if: steps.check-issue.outputs.should_run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}
          ISSUE_NUMBER: ${{ steps.issue.outputs.number }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || '' }}
          NODE_ENV: production
        working-directory: server
        run: node scripts/ai_bug_fixer.js
      
      - name: üìä AI Fixer Results
        if: steps.check-issue.outputs.should_run == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = ${{ steps.issue.outputs.number }};
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: |
                ü§ñ **AI Bug Fixer Workflow Complete**
                The automated AI bug fixing workflow has completed for this issue.
                **Workflow Details:**
                - ‚úÖ Repository: `${{ github.repository }}`
                - ‚úÖ Issue: #${issueNumber}
                - ‚úÖ Triggered by: ${{ github.event_name }}
                - ‚úÖ Run ID: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
                If a Pull Request was created, it will be automatically reviewed and merged when approved.
            });
      
      - name: ‚ö†Ô∏è Skip Notification
        if: steps.check-issue.outputs.should_run == 'false'
        run: |
          echo "Skipping AI bug fixer for this issue"
          echo "Reason: Issue does not meet criteria for AI processing"






