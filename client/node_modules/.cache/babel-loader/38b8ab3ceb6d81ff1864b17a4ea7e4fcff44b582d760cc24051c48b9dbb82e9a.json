{"ast":null,"code":"const BASE = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nconst authHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    \"Content-Type\": \"application/json\",\n    Authorization: token ? `Bearer ${token}` : \"\"\n  };\n};\n\n// ====== POINTS API ======\n\nexport async function getMyPoints() {\n  const res = await fetch(`${BASE}/api/points/me`, {\n    headers: authHeaders()\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || \"Failed to load points\");\n  return data; // { balance, claimedToday }\n}\nexport async function getPointsHistory() {\n  const res = await fetch(`${BASE}/api/points/history`, {\n    headers: authHeaders()\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || \"Failed to load history\");\n  return data; // array\n}\nexport async function claimDailyLogin() {\n  const res = await fetch(`${BASE}/api/points/claim/daily-login`, {\n    method: \"POST\",\n    headers: authHeaders()\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || \"Claim failed\");\n  return data; // { added }\n}\nexport async function redeemPoints(amount) {\n  const res = await fetch(`${BASE}/api/points/redeem`, {\n    method: \"POST\",\n    headers: authHeaders(),\n    body: JSON.stringify({\n      amount\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || \"Redeem failed\");\n  return data; // { spent }\n}\n\n/* ===========================\r\n   AUTH FUNCTIONS\r\n   =========================== */\nexport async function registerUser(payload) {\n  const res = await fetch(`${BASE}/api/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || \"Register failed\");\n  if (data.token) setAuthToken(data.token);\n  return data;\n}\nexport async function loginUser(payload) {\n  const res = await fetch(`${BASE}/api/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || \"Login failed\");\n  if (data.token) setAuthToken(data.token);\n  return data;\n}\nexport function setAuthToken(token) {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n}\n\n/* ===========================\r\n   ALERTS FUNCTIONS\r\n   =========================== */\nexport async function getAlerts() {\n  const res = await fetch(`${BASE}/api/alerts`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) throw new Error(\"Failed to load alerts\");\n  return res.json();\n}\nexport async function createAlert(payload) {\n  const res = await fetch(`${BASE}/api/alerts`, {\n    method: \"POST\",\n    headers: authHeaders(),\n    body: JSON.stringify(payload)\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || \"Create failed\");\n  return data;\n}\nexport async function toggleAlert(id) {\n  const res = await fetch(`${BASE}/api/alerts/${id}/toggle`, {\n    method: \"PATCH\",\n    headers: authHeaders()\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || \"Toggle failed\");\n  return data;\n}\nexport async function deleteAlert(id) {\n  const res = await fetch(`${BASE}/api/alerts/${id}`, {\n    method: \"DELETE\",\n    headers: authHeaders()\n  });\n  if (!res.ok) throw new Error(\"Delete failed\");\n  return true;\n}","map":{"version":3,"names":["BASE","process","env","REACT_APP_API_URL","authHeaders","token","localStorage","getItem","Authorization","getMyPoints","res","fetch","headers","data","json","ok","Error","message","getPointsHistory","claimDailyLogin","method","redeemPoints","amount","body","JSON","stringify","registerUser","payload","setAuthToken","loginUser","setItem","removeItem","getAlerts","createAlert","toggleAlert","id","deleteAlert"],"sources":["C:/Users/ericv/final10/client/src/lib/api.js"],"sourcesContent":["const BASE = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nconst authHeaders = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: token ? `Bearer ${token}` : \"\",\r\n  };\r\n};\r\n\r\n// ====== POINTS API ======\r\n\r\nexport async function getMyPoints() {\r\n  const res = await fetch(`${BASE}/api/points/me`, { headers: authHeaders() });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || \"Failed to load points\");\r\n  return data; // { balance, claimedToday }\r\n}\r\n\r\nexport async function getPointsHistory() {\r\n  const res = await fetch(`${BASE}/api/points/history`, { headers: authHeaders() });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || \"Failed to load history\");\r\n  return data; // array\r\n}\r\n\r\nexport async function claimDailyLogin() {\r\n  const res = await fetch(`${BASE}/api/points/claim/daily-login`, {\r\n    method: \"POST\",\r\n    headers: authHeaders(),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || \"Claim failed\");\r\n  return data; // { added }\r\n}\r\n\r\nexport async function redeemPoints(amount) {\r\n  const res = await fetch(`${BASE}/api/points/redeem`, {\r\n    method: \"POST\",\r\n    headers: authHeaders(),\r\n    body: JSON.stringify({ amount }),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || \"Redeem failed\");\r\n  return data; // { spent }\r\n}\r\n\r\n/* ===========================\r\n   AUTH FUNCTIONS\r\n   =========================== */\r\nexport async function registerUser(payload) {\r\n  const res = await fetch(`${BASE}/api/auth/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(payload),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || \"Register failed\");\r\n  if (data.token) setAuthToken(data.token);\r\n  return data;\r\n}\r\n\r\nexport async function loginUser(payload) {\r\n  const res = await fetch(`${BASE}/api/auth/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(payload),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || \"Login failed\");\r\n  if (data.token) setAuthToken(data.token);\r\n  return data;\r\n}\r\n\r\nexport function setAuthToken(token) {\r\n  if (token) {\r\n    localStorage.setItem(\"token\", token);\r\n  } else {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n}\r\n\r\n/* ===========================\r\n   ALERTS FUNCTIONS\r\n   =========================== */\r\nexport async function getAlerts() {\r\n  const res = await fetch(`${BASE}/api/alerts`, { headers: authHeaders() });\r\n  if (!res.ok) throw new Error(\"Failed to load alerts\");\r\n  return res.json();\r\n}\r\n\r\nexport async function createAlert(payload) {\r\n  const res = await fetch(`${BASE}/api/alerts`, {\r\n    method: \"POST\",\r\n    headers: authHeaders(),\r\n    body: JSON.stringify(payload),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || \"Create failed\");\r\n  return data;\r\n}\r\n\r\nexport async function toggleAlert(id) {\r\n  const res = await fetch(`${BASE}/api/alerts/${id}/toggle`, {\r\n    method: \"PATCH\",\r\n    headers: authHeaders(),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || \"Toggle failed\");\r\n  return data;\r\n}\r\n\r\nexport async function deleteAlert(id) {\r\n  const res = await fetch(`${BASE}/api/alerts/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: authHeaders(),\r\n  });\r\n  if (!res.ok) throw new Error(\"Delete failed\");\r\n  return true;\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAErE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO;IACL,cAAc,EAAE,kBAAkB;IAClCC,aAAa,EAAEH,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;EAC7C,CAAC;AACH,CAAC;;AAED;;AAEA,OAAO,eAAeI,WAAWA,CAAA,EAAG;EAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,gBAAgB,EAAE;IAAEY,OAAO,EAAER,WAAW,CAAC;EAAE,CAAC,CAAC;EAC5E,MAAMS,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,uBAAuB,CAAC;EACrE,OAAOJ,IAAI,CAAC,CAAC;AACf;AAEA,OAAO,eAAeK,gBAAgBA,CAAA,EAAG;EACvC,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,qBAAqB,EAAE;IAAEY,OAAO,EAAER,WAAW,CAAC;EAAE,CAAC,CAAC;EACjF,MAAMS,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,wBAAwB,CAAC;EACtE,OAAOJ,IAAI,CAAC,CAAC;AACf;AAEA,OAAO,eAAeM,eAAeA,CAAA,EAAG;EACtC,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,+BAA+B,EAAE;IAC9DoB,MAAM,EAAE,MAAM;IACdR,OAAO,EAAER,WAAW,CAAC;EACvB,CAAC,CAAC;EACF,MAAMS,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;EAC5D,OAAOJ,IAAI,CAAC,CAAC;AACf;AAEA,OAAO,eAAeQ,YAAYA,CAACC,MAAM,EAAE;EACzC,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,oBAAoB,EAAE;IACnDoB,MAAM,EAAE,MAAM;IACdR,OAAO,EAAER,WAAW,CAAC,CAAC;IACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEH;IAAO,CAAC;EACjC,CAAC,CAAC;EACF,MAAMT,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;EAC7D,OAAOJ,IAAI,CAAC,CAAC;AACf;;AAEA;AACA;AACA;AACA,OAAO,eAAea,YAAYA,CAACC,OAAO,EAAE;EAC1C,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,oBAAoB,EAAE;IACnDoB,MAAM,EAAE,MAAM;IACdR,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,OAAO;EAC9B,CAAC,CAAC;EACF,MAAMd,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,iBAAiB,CAAC;EAC/D,IAAIJ,IAAI,CAACR,KAAK,EAAEuB,YAAY,CAACf,IAAI,CAACR,KAAK,CAAC;EACxC,OAAOQ,IAAI;AACb;AAEA,OAAO,eAAegB,SAASA,CAACF,OAAO,EAAE;EACvC,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,iBAAiB,EAAE;IAChDoB,MAAM,EAAE,MAAM;IACdR,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,OAAO;EAC9B,CAAC,CAAC;EACF,MAAMd,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;EAC5D,IAAIJ,IAAI,CAACR,KAAK,EAAEuB,YAAY,CAACf,IAAI,CAACR,KAAK,CAAC;EACxC,OAAOQ,IAAI;AACb;AAEA,OAAO,SAASe,YAAYA,CAACvB,KAAK,EAAE;EAClC,IAAIA,KAAK,EAAE;IACTC,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAEzB,KAAK,CAAC;EACtC,CAAC,MAAM;IACLC,YAAY,CAACyB,UAAU,CAAC,OAAO,CAAC;EAClC;AACF;;AAEA;AACA;AACA;AACA,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMtB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,aAAa,EAAE;IAAEY,OAAO,EAAER,WAAW,CAAC;EAAE,CAAC,CAAC;EACzE,IAAI,CAACM,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAON,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAemB,WAAWA,CAACN,OAAO,EAAE;EACzC,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,aAAa,EAAE;IAC5CoB,MAAM,EAAE,MAAM;IACdR,OAAO,EAAER,WAAW,CAAC,CAAC;IACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,OAAO;EAC9B,CAAC,CAAC;EACF,MAAMd,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;EAC7D,OAAOJ,IAAI;AACb;AAEA,OAAO,eAAeqB,WAAWA,CAACC,EAAE,EAAE;EACpC,MAAMzB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,eAAemC,EAAE,SAAS,EAAE;IACzDf,MAAM,EAAE,OAAO;IACfR,OAAO,EAAER,WAAW,CAAC;EACvB,CAAC,CAAC;EACF,MAAMS,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;EAC7D,OAAOJ,IAAI;AACb;AAEA,OAAO,eAAeuB,WAAWA,CAACD,EAAE,EAAE;EACpC,MAAMzB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGX,IAAI,eAAemC,EAAE,EAAE,EAAE;IAClDf,MAAM,EAAE,QAAQ;IAChBR,OAAO,EAAER,WAAW,CAAC;EACvB,CAAC,CAAC;EACF,IAAI,CAACM,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAC7C,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}