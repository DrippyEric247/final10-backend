{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericv\\\\final10\\\\client\\\\src\\\\index.js\";\nimport './styles/theme.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthProvider } from \"./context/AuthContext\"; // <-- make sure path is correct\n\n// Register service worker for caching and performance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/sw.js').then(registration => {\n      console.log('SW registered: ', registration);\n    }).catch(registrationError => {\n      console.log('SW registration failed: ', registrationError);\n    });\n  });\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","BrowserRouter","AuthProvider","jsxDEV","_jsxDEV","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","catch","registrationError","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/ericv/final10/client/src/index.js"],"sourcesContent":["import './styles/theme.css';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { AuthProvider } from \"./context/AuthContext\"; // <-- make sure path is correct\r\n\r\n// Register service worker for caching and performance\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceWorker.register('/sw.js')\r\n      .then((registration) => {\r\n        console.log('SW registered: ', registration);\r\n      })\r\n      .catch((registrationError) => {\r\n        console.log('SW registration failed: ', registrationError);\r\n      });\r\n  });\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <AuthProvider>\r\n        <App />\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,YAAY,QAAQ,uBAAuB,CAAC,CAAC;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAI,eAAe,IAAIC,SAAS,EAAE;EAChCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;IACpCF,SAAS,CAACG,aAAa,CAACC,QAAQ,CAAC,QAAQ,CAAC,CACvCC,IAAI,CAAEC,YAAY,IAAK;MACtBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,YAAY,CAAC;IAC9C,CAAC,CAAC,CACDG,KAAK,CAAEC,iBAAiB,IAAK;MAC5BH,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,iBAAiB,CAAC;IAC5D,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AAEA,MAAMC,IAAI,GAAGjB,QAAQ,CAACkB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACThB,OAAA,CAACN,KAAK,CAACuB,UAAU;EAAAC,QAAA,eACflB,OAAA,CAACH,aAAa;IAAAqB,QAAA,eACZlB,OAAA,CAACF,YAAY;MAAAoB,QAAA,eACXlB,OAAA,CAACJ,GAAG;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}