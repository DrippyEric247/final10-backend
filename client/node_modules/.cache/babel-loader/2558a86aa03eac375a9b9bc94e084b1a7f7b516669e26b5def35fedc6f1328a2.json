{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Create axios instance with default config\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add token to requests if available\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Handle token expiration\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const authService={async login(email,password){const response=await api.post('/auth/login',{email,password});return response.data;},async register(userData){const response=await api.post('/auth/register',userData);return response.data;},async getCurrentUser(){const response=await api.get('/auth/me');return response.data;},async updateProfile(profileData){const response=await api.put('/auth/profile',profileData);return response.data;},async changePassword(currentPassword,newPassword){const response=await api.put('/auth/password',{currentPassword,newPassword});return response.data;}};export default api;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}