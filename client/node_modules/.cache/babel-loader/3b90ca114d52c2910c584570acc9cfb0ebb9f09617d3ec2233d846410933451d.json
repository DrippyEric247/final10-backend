{"ast":null,"code":"import api from './authService'; // you already have this axios instance\n\n// SEARCH (real)\nasync function searchEbay(query) {\n  const {\n    data\n  } = await api.get(`/ebay/search`, {\n    params: {\n      q: query\n    }\n  });\n  return data; // { items: [...] }\n}\n\n// ITEM DETAIL (real)\nasync function getItemDetails(id) {\n  const {\n    data\n  } = await api.get(`/ebay/item/${id}`);\n  return data; // { item, bids, seller, ... }\n}\n\n// SEARCH ITEMS (for pages that need more flexible search)\nasync function searchItems(params) {\n  const {\n    data\n  } = await api.get(`/ebay/search`, {\n    params\n  });\n  return data; // { items: [...], pagination: {...} }\n}\n\n// GET TRENDING ITEMS\nasync function getTrendingItems(category = 'all', limit = 20) {\n  const {\n    data\n  } = await api.get(`/ebay/trending`, {\n    params: {\n      category,\n      limit\n    }\n  });\n  return data; // { items: [...], categories: [...] }\n}\n\n// GET CATEGORIES\nasync function getCategories() {\n  const {\n    data\n  } = await api.get(`/ebay/categories`);\n  return data; // { categories: [...] }\n}\nconst ebayService = {\n  searchEbay,\n  getItemDetails,\n  searchItems,\n  getTrendingItems,\n  getCategories\n  // keep the rest if you want, but stop using generateMockEbayItems in pages\n};\nexport default ebayService;","map":{"version":3,"names":["api","searchEbay","query","data","get","params","q","getItemDetails","id","searchItems","getTrendingItems","category","limit","getCategories","ebayService"],"sources":["C:/Users/ericv/final10/client/src/services/ebayService.js"],"sourcesContent":["import api from './authService'; // you already have this axios instance\r\n\r\n// SEARCH (real)\r\nasync function searchEbay(query) {\r\n  const { data } = await api.get(`/ebay/search`, { params: { q: query } });\r\n  return data; // { items: [...] }\r\n}\r\n\r\n// ITEM DETAIL (real)\r\nasync function getItemDetails(id) {\r\n  const { data } = await api.get(`/ebay/item/${id}`);\r\n  return data; // { item, bids, seller, ... }\r\n}\r\n\r\n// SEARCH ITEMS (for pages that need more flexible search)\r\nasync function searchItems(params) {\r\n  const { data } = await api.get(`/ebay/search`, { params });\r\n  return data; // { items: [...], pagination: {...} }\r\n}\r\n\r\n// GET TRENDING ITEMS\r\nasync function getTrendingItems(category = 'all', limit = 20) {\r\n  const { data } = await api.get(`/ebay/trending`, { \r\n    params: { category, limit } \r\n  });\r\n  return data; // { items: [...], categories: [...] }\r\n}\r\n\r\n// GET CATEGORIES\r\nasync function getCategories() {\r\n  const { data } = await api.get(`/ebay/categories`);\r\n  return data; // { categories: [...] }\r\n}\r\n\r\nconst ebayService = {\r\n  searchEbay,\r\n  getItemDetails,\r\n  searchItems,\r\n  getTrendingItems,\r\n  getCategories,\r\n  // keep the rest if you want, but stop using generateMockEbayItems in pages\r\n};\r\n\r\nexport default ebayService;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,eAAe,CAAC,CAAC;;AAEjC;AACA,eAAeC,UAAUA,CAACC,KAAK,EAAE;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,cAAc,EAAE;IAAEC,MAAM,EAAE;MAAEC,CAAC,EAAEJ;IAAM;EAAE,CAAC,CAAC;EACxE,OAAOC,IAAI,CAAC,CAAC;AACf;;AAEA;AACA,eAAeI,cAAcA,CAACC,EAAE,EAAE;EAChC,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,cAAcI,EAAE,EAAE,CAAC;EAClD,OAAOL,IAAI,CAAC,CAAC;AACf;;AAEA;AACA,eAAeM,WAAWA,CAACJ,MAAM,EAAE;EACjC,MAAM;IAAEF;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,cAAc,EAAE;IAAEC;EAAO,CAAC,CAAC;EAC1D,OAAOF,IAAI,CAAC,CAAC;AACf;;AAEA;AACA,eAAeO,gBAAgBA,CAACC,QAAQ,GAAG,KAAK,EAAEC,KAAK,GAAG,EAAE,EAAE;EAC5D,MAAM;IAAET;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,gBAAgB,EAAE;IAC/CC,MAAM,EAAE;MAAEM,QAAQ;MAAEC;IAAM;EAC5B,CAAC,CAAC;EACF,OAAOT,IAAI,CAAC,CAAC;AACf;;AAEA;AACA,eAAeU,aAAaA,CAAA,EAAG;EAC7B,MAAM;IAAEV;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,kBAAkB,CAAC;EAClD,OAAOD,IAAI,CAAC,CAAC;AACf;AAEA,MAAMW,WAAW,GAAG;EAClBb,UAAU;EACVM,cAAc;EACdE,WAAW;EACXC,gBAAgB;EAChBG;EACA;AACF,CAAC;AAED,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}