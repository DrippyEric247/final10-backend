{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericv\\\\final10\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// client/src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { loginUser, registerUser, setAuthToken, getMe, STORAGE_KEY } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Load token on mount + fetch user\n  useEffect(() => {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    if (stored) {\n      setToken(stored);\n      setAuthToken(stored);\n      // hydrate user profile\n      getMe().then(user => {\n        console.log(\"Auth hydration successful:\", user);\n        setUser(user);\n      }).catch(err => {\n        console.error(\"Auth hydration failed:\", err);\n        // Clear invalid token and logout\n        localStorage.removeItem(STORAGE_KEY);\n        logout();\n      }).finally(() => setLoading(false));\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    setError(\"\");\n    try {\n      const res = await loginUser(email, password);\n      // loginUser already sets token + returns user\n      setToken(localStorage.getItem(STORAGE_KEY));\n      setUser(res);\n    } catch (err) {\n      setError(\"Login failed: \" + err.message);\n      throw err;\n    }\n  };\n  const register = async form => {\n    setError(\"\");\n    try {\n      const res = await registerUser(form);\n      // registerUser already sets token + returns user\n      setToken(localStorage.getItem(STORAGE_KEY));\n      setUser(res);\n    } catch (err) {\n      setError(\"Signup failed: \" + err.message);\n      throw err;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setAuthToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      error,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"bTzAwLhDnBUkrlsEZtMXUM4n6Tw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","loginUser","registerUser","setAuthToken","getMe","STORAGE_KEY","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","error","setError","stored","localStorage","getItem","then","console","log","catch","err","removeItem","logout","finally","login","email","password","res","message","register","form","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ericv/final10/client/src/context/AuthContext.js"],"sourcesContent":["// client/src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport {\n  loginUser,\n  registerUser,\n  setAuthToken,\n  getMe,\n  STORAGE_KEY,\n} from \"../lib/api\";\n\nconst AuthContext = createContext(null);\nexport const useAuth = () => useContext(AuthContext);\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Load token on mount + fetch user\n  useEffect(() => {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    if (stored) {\n      setToken(stored);\n      setAuthToken(stored);\n      // hydrate user profile\n      getMe()\n        .then((user) => {\n          console.log(\"Auth hydration successful:\", user);\n          setUser(user);\n        })\n        .catch((err) => {\n          console.error(\"Auth hydration failed:\", err);\n          // Clear invalid token and logout\n          localStorage.removeItem(STORAGE_KEY);\n          logout();\n        })\n        .finally(() => setLoading(false));\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    setError(\"\");\n    try {\n      const res = await loginUser(email, password);\n      // loginUser already sets token + returns user\n      setToken(localStorage.getItem(STORAGE_KEY));\n      setUser(res);\n    } catch (err) {\n      setError(\"Login failed: \" + err.message);\n      throw err;\n    }\n  };\n\n  const register = async (form) => {\n    setError(\"\");\n    try {\n      const res = await registerUser(form);\n      // registerUser already sets token + returns user\n      setToken(localStorage.getItem(STORAGE_KEY));\n      setUser(res);\n    } catch (err) {\n      setError(\"Signup failed: \" + err.message);\n      throw err;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setAuthToken(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ user, token, loading, error, login, register, logout }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}