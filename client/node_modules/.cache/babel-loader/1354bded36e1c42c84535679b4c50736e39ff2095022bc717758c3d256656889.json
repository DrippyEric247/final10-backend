{"ast":null,"code":"import axios from \"axios\";\n// src/lib/api.js (v\nconst API_BASE = '/api';\nexport const api = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Use ONE consistent key everywhere\nexport const STORAGE_KEY = \"f10_token\";\n\n/** Attach/remove token on axios + persist in localStorage */\nexport function setAuthToken(token) {\n  if (token) {\n    localStorage.setItem(STORAGE_KEY, token);\n    api.defaults.headers.common.Authorization = `Bearer ${token}`;\n  } else {\n    localStorage.removeItem(STORAGE_KEY);\n    delete api.defaults.headers.common.Authorization;\n  }\n}\n\n// hydrate on load\nconst saved = localStorage.getItem(STORAGE_KEY);\nif (saved) setAuthToken(saved);\n\n/** ---- Auth ---- **/\nexport async function loginUser({\n  email,\n  password\n}) {\n  const {\n    data\n  } = await api.post(\"/auth/login\", {\n    email,\n    password\n  });\n  setAuthToken(data.token);\n  return data.user;\n}\nexport async function registerUser(payload) {\n  const {\n    data\n  } = await api.post(\"/auth/signup\", payload);\n  setAuthToken(data.token);\n  return data.user;\n}\n\n/** NEW: get current user from token */\nexport async function getMe() {\n  const {\n    data\n  } = await api.get(\"/auth/me\");\n  return data.user; // { id, email, username, ... }\n}\n\n/** ---- Points ---- **/\nexport async function getMyPoints() {\n  const {\n    data\n  } = await api.get(\"/points/me\");\n  return data; // { balance, history }\n}\nexport async function claimDailyLogin() {\n  const {\n    data\n  } = await api.post(\"/points/daily\");\n  return data; // { newBalance, added } or { message }\n}","map":{"version":3,"names":["axios","API_BASE","api","create","baseURL","headers","STORAGE_KEY","setAuthToken","token","localStorage","setItem","defaults","common","Authorization","removeItem","saved","getItem","loginUser","email","password","data","post","user","registerUser","payload","getMe","get","getMyPoints","claimDailyLogin"],"sources":["C:/Users/ericv/final10/client/src/lib/api.js"],"sourcesContent":["import axios from \"axios\";\r\n// src/lib/api.js (v\r\nconst API_BASE = '/api';\r\nexport const api = axios.create({\r\n  baseURL: API_BASE,\r\n  headers: { 'Content-Type': 'application/json' }\r\n});\r\n\r\n// Use ONE consistent key everywhere\r\nexport const STORAGE_KEY = \"f10_token\";\r\n\r\n/** Attach/remove token on axios + persist in localStorage */\r\nexport function setAuthToken(token) {\r\n  if (token) {\r\n    localStorage.setItem(STORAGE_KEY, token);\r\n    api.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  } else {\r\n    localStorage.removeItem(STORAGE_KEY);\r\n    delete api.defaults.headers.common.Authorization;\r\n  }\r\n}\r\n\r\n// hydrate on load\r\nconst saved = localStorage.getItem(STORAGE_KEY);\r\nif (saved) setAuthToken(saved);\r\n\r\n/** ---- Auth ---- **/\r\nexport async function loginUser({ email, password }) {\r\n  const { data } = await api.post(\"/auth/login\", { email, password });\r\n  setAuthToken(data.token);\r\n  return data.user;\r\n}\r\n\r\nexport async function registerUser(payload) {\r\n  const { data } = await api.post(\"/auth/signup\", payload);\r\n  setAuthToken(data.token);\r\n  return data.user;\r\n}\r\n\r\n/** NEW: get current user from token */\r\nexport async function getMe() {\r\n  const { data } = await api.get(\"/auth/me\");\r\n  return data.user; // { id, email, username, ... }\r\n}\r\n\r\n/** ---- Points ---- **/\r\nexport async function getMyPoints() {\r\n  const { data } = await api.get(\"/points/me\");\r\n  return data; // { balance, history }\r\n}\r\n\r\nexport async function claimDailyLogin() {\r\n  const { data } = await api.post(\"/points/daily\");\r\n  return data; // { newBalance, added } or { message }\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,QAAQ,GAAG,MAAM;AACvB,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG,WAAW;;AAEtC;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAClC,IAAIA,KAAK,EAAE;IACTC,YAAY,CAACC,OAAO,CAACJ,WAAW,EAAEE,KAAK,CAAC;IACxCN,GAAG,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAACC,aAAa,GAAG,UAAUL,KAAK,EAAE;EAC/D,CAAC,MAAM;IACLC,YAAY,CAACK,UAAU,CAACR,WAAW,CAAC;IACpC,OAAOJ,GAAG,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAACC,aAAa;EAClD;AACF;;AAEA;AACA,MAAME,KAAK,GAAGN,YAAY,CAACO,OAAO,CAACV,WAAW,CAAC;AAC/C,IAAIS,KAAK,EAAER,YAAY,CAACQ,KAAK,CAAC;;AAE9B;AACA,OAAO,eAAeE,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EACnD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAE;IAAEH,KAAK;IAAEC;EAAS,CAAC,CAAC;EACnEZ,YAAY,CAACa,IAAI,CAACZ,KAAK,CAAC;EACxB,OAAOY,IAAI,CAACE,IAAI;AAClB;AAEA,OAAO,eAAeC,YAAYA,CAACC,OAAO,EAAE;EAC1C,MAAM;IAAEJ;EAAK,CAAC,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,cAAc,EAAEG,OAAO,CAAC;EACxDjB,YAAY,CAACa,IAAI,CAACZ,KAAK,CAAC;EACxB,OAAOY,IAAI,CAACE,IAAI;AAClB;;AAEA;AACA,OAAO,eAAeG,KAAKA,CAAA,EAAG;EAC5B,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMlB,GAAG,CAACwB,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAON,IAAI,CAACE,IAAI,CAAC,CAAC;AACpB;;AAEA;AACA,OAAO,eAAeK,WAAWA,CAAA,EAAG;EAClC,MAAM;IAAEP;EAAK,CAAC,GAAG,MAAMlB,GAAG,CAACwB,GAAG,CAAC,YAAY,CAAC;EAC5C,OAAON,IAAI,CAAC,CAAC;AACf;AAEA,OAAO,eAAeQ,eAAeA,CAAA,EAAG;EACtC,MAAM;IAAER;EAAK,CAAC,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,eAAe,CAAC;EAChD,OAAOD,IAAI,CAAC,CAAC;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}