{"ast":null,"code":"// src/index.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { defaultShouldDehydrateMutation, defaultShouldDehydrateQuery, dehydrate, hydrate } from \"./hydration.js\";\nimport { InfiniteQueryObserver } from \"./infiniteQueryObserver.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { MutationObserver } from \"./mutationObserver.js\";\nimport { defaultScheduler, notifyManager } from \"./notifyManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { QueriesObserver } from \"./queriesObserver.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { QueryClient } from \"./queryClient.js\";\nimport { QueryObserver } from \"./queryObserver.js\";\nimport { CancelledError, isCancelledError } from \"./retryer.js\";\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { hashKey, isServer, keepPreviousData, matchMutation, matchQuery, noop, partialMatchKey, replaceEqualDeep, shouldThrowError, skipToken } from \"./utils.js\";\nimport { streamedQuery } from \"./streamedQuery.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { Query } from \"./query.js\";\nexport * from \"./types.js\";\nexport { CancelledError, InfiniteQueryObserver, Mutation, MutationCache, MutationObserver, QueriesObserver, Query, QueryCache, QueryClient, QueryObserver, defaultScheduler, defaultShouldDehydrateMutation, defaultShouldDehydrateQuery, dehydrate, streamedQuery as experimental_streamedQuery, focusManager, hashKey, hydrate, isCancelledError, isServer, keepPreviousData, matchMutation, matchQuery, noop, notifyManager, onlineManager, partialMatchKey, replaceEqualDeep, shouldThrowError, skipToken, timeoutManager };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}